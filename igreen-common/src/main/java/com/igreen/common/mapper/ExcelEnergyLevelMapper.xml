<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.igreen.common.dao.ExcelEnergyLevelMapper" >
  <resultMap id="BaseResultMap" type="com.igreen.common.model.ExcelEnergyLevel" >
    <id column="ID" property="id" jdbcType="BIGINT" />
    <result column="company" property="company" jdbcType="VARCHAR" />
    <result column="domain" property="domain" jdbcType="VARCHAR" />
    <result column="level" property="level" jdbcType="VARCHAR" />
    <result column="certificate_number" property="certificateNumber" jdbcType="VARCHAR" />
    <result column="certificate_begin" property="certificateBegin" jdbcType="VARCHAR" />
    <result column="certificate_end" property="certificateEnd" jdbcType="VARCHAR" />
    <result column="statas" property="statas" jdbcType="INTEGER" />
    <result column="creater" property="creater" jdbcType="VARCHAR" />
    <result column="created_time" property="createdTime" jdbcType="DATE" />
    <result column="updater" property="updater" jdbcType="VARCHAR" />
    <result column="updated_time" property="updatedTime" jdbcType="DATE" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    ID, company, domain, level, certificate_number, certificate_begin, certificate_end, 
    statas, creater, created_time, updater, updated_time, remark
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.igreen.common.model.ExcelEnergyLevelExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from excel_energy_level
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from excel_energy_level
    where ID = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from excel_energy_level
    where ID = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.igreen.common.model.ExcelEnergyLevelExample" >
    delete from excel_energy_level
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.igreen.common.model.ExcelEnergyLevel" useGeneratedKeys="true" keyProperty="id" >
    insert into excel_energy_level (company, domain, level, 
      certificate_number, certificate_begin, certificate_end, 
      statas, creater, created_time, 
      updater, updated_time, remark
      )
    values (#{company,jdbcType=VARCHAR}, #{domain,jdbcType=VARCHAR}, #{level,jdbcType=VARCHAR}, 
      #{certificateNumber,jdbcType=VARCHAR}, #{certificateBegin,jdbcType=VARCHAR}, #{certificateEnd,jdbcType=VARCHAR}, 
      #{statas,jdbcType=INTEGER}, #{creater,jdbcType=VARCHAR}, #{createdTime,jdbcType=DATE}, 
      #{updater,jdbcType=VARCHAR}, #{updatedTime,jdbcType=DATE}, #{remark,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.igreen.common.model.ExcelEnergyLevel" useGeneratedKeys="true" keyProperty="id" >
    insert into excel_energy_level
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="company != null" >
        company,
      </if>
      <if test="domain != null" >
        domain,
      </if>
      <if test="level != null" >
        level,
      </if>
      <if test="certificateNumber != null" >
        certificate_number,
      </if>
      <if test="certificateBegin != null" >
        certificate_begin,
      </if>
      <if test="certificateEnd != null" >
        certificate_end,
      </if>
      <if test="statas != null" >
        statas,
      </if>
      <if test="creater != null" >
        creater,
      </if>
      <if test="createdTime != null" >
        created_time,
      </if>
      <if test="updater != null" >
        updater,
      </if>
      <if test="updatedTime != null" >
        updated_time,
      </if>
      <if test="remark != null" >
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="company != null" >
        #{company,jdbcType=VARCHAR},
      </if>
      <if test="domain != null" >
        #{domain,jdbcType=VARCHAR},
      </if>
      <if test="level != null" >
        #{level,jdbcType=VARCHAR},
      </if>
      <if test="certificateNumber != null" >
        #{certificateNumber,jdbcType=VARCHAR},
      </if>
      <if test="certificateBegin != null" >
        #{certificateBegin,jdbcType=VARCHAR},
      </if>
      <if test="certificateEnd != null" >
        #{certificateEnd,jdbcType=VARCHAR},
      </if>
      <if test="statas != null" >
        #{statas,jdbcType=INTEGER},
      </if>
      <if test="creater != null" >
        #{creater,jdbcType=VARCHAR},
      </if>
      <if test="createdTime != null" >
        #{createdTime,jdbcType=DATE},
      </if>
      <if test="updater != null" >
        #{updater,jdbcType=VARCHAR},
      </if>
      <if test="updatedTime != null" >
        #{updatedTime,jdbcType=DATE},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.igreen.common.model.ExcelEnergyLevelExample" resultType="java.lang.Integer" >
    select count(*) from excel_energy_level
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update excel_energy_level
    <set >
      <if test="record.id != null" >
        ID = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.company != null" >
        company = #{record.company,jdbcType=VARCHAR},
      </if>
      <if test="record.domain != null" >
        domain = #{record.domain,jdbcType=VARCHAR},
      </if>
      <if test="record.level != null" >
        level = #{record.level,jdbcType=VARCHAR},
      </if>
      <if test="record.certificateNumber != null" >
        certificate_number = #{record.certificateNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.certificateBegin != null" >
        certificate_begin = #{record.certificateBegin,jdbcType=VARCHAR},
      </if>
      <if test="record.certificateEnd != null" >
        certificate_end = #{record.certificateEnd,jdbcType=VARCHAR},
      </if>
      <if test="record.statas != null" >
        statas = #{record.statas,jdbcType=INTEGER},
      </if>
      <if test="record.creater != null" >
        creater = #{record.creater,jdbcType=VARCHAR},
      </if>
      <if test="record.createdTime != null" >
        created_time = #{record.createdTime,jdbcType=DATE},
      </if>
      <if test="record.updater != null" >
        updater = #{record.updater,jdbcType=VARCHAR},
      </if>
      <if test="record.updatedTime != null" >
        updated_time = #{record.updatedTime,jdbcType=DATE},
      </if>
      <if test="record.remark != null" >
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update excel_energy_level
    set ID = #{record.id,jdbcType=BIGINT},
      company = #{record.company,jdbcType=VARCHAR},
      domain = #{record.domain,jdbcType=VARCHAR},
      level = #{record.level,jdbcType=VARCHAR},
      certificate_number = #{record.certificateNumber,jdbcType=VARCHAR},
      certificate_begin = #{record.certificateBegin,jdbcType=VARCHAR},
      certificate_end = #{record.certificateEnd,jdbcType=VARCHAR},
      statas = #{record.statas,jdbcType=INTEGER},
      creater = #{record.creater,jdbcType=VARCHAR},
      created_time = #{record.createdTime,jdbcType=DATE},
      updater = #{record.updater,jdbcType=VARCHAR},
      updated_time = #{record.updatedTime,jdbcType=DATE},
      remark = #{record.remark,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.igreen.common.model.ExcelEnergyLevel" >
    update excel_energy_level
    <set >
      <if test="company != null" >
        company = #{company,jdbcType=VARCHAR},
      </if>
      <if test="domain != null" >
        domain = #{domain,jdbcType=VARCHAR},
      </if>
      <if test="level != null" >
        level = #{level,jdbcType=VARCHAR},
      </if>
      <if test="certificateNumber != null" >
        certificate_number = #{certificateNumber,jdbcType=VARCHAR},
      </if>
      <if test="certificateBegin != null" >
        certificate_begin = #{certificateBegin,jdbcType=VARCHAR},
      </if>
      <if test="certificateEnd != null" >
        certificate_end = #{certificateEnd,jdbcType=VARCHAR},
      </if>
      <if test="statas != null" >
        statas = #{statas,jdbcType=INTEGER},
      </if>
      <if test="creater != null" >
        creater = #{creater,jdbcType=VARCHAR},
      </if>
      <if test="createdTime != null" >
        created_time = #{createdTime,jdbcType=DATE},
      </if>
      <if test="updater != null" >
        updater = #{updater,jdbcType=VARCHAR},
      </if>
      <if test="updatedTime != null" >
        updated_time = #{updatedTime,jdbcType=DATE},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where ID = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.igreen.common.model.ExcelEnergyLevel" >
    update excel_energy_level
    set company = #{company,jdbcType=VARCHAR},
      domain = #{domain,jdbcType=VARCHAR},
      level = #{level,jdbcType=VARCHAR},
      certificate_number = #{certificateNumber,jdbcType=VARCHAR},
      certificate_begin = #{certificateBegin,jdbcType=VARCHAR},
      certificate_end = #{certificateEnd,jdbcType=VARCHAR},
      statas = #{statas,jdbcType=INTEGER},
      creater = #{creater,jdbcType=VARCHAR},
      created_time = #{createdTime,jdbcType=DATE},
      updater = #{updater,jdbcType=VARCHAR},
      updated_time = #{updatedTime,jdbcType=DATE},
      remark = #{remark,jdbcType=VARCHAR}
    where ID = #{id,jdbcType=BIGINT}
  </update>
</mapper>