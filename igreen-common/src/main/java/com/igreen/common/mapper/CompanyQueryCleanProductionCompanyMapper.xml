<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.igreen.common.dao.CompanyQueryCleanProductionCompanyMapper" >
  <resultMap id="BaseResultMap" type="com.igreen.common.model.CompanyQueryCleanProductionCompany" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="regist_item_id" property="registItemId" jdbcType="INTEGER" />
    <result column="check_year" property="checkYear" jdbcType="VARCHAR" />
    <result column="batch_no" property="batchNo" jdbcType="VARCHAR" />
    <result column="city" property="city" jdbcType="VARCHAR" />
    <result column="serial_number" property="serialNumber" jdbcType="VARCHAR" />
    <result column="company_name" property="companyName" jdbcType="VARCHAR" />
    <result column="trade" property="trade" jdbcType="VARCHAR" />
    <result column="product_sales_amount" property="productSalesAmount" jdbcType="VARCHAR" />
    <result column="region" property="region" jdbcType="VARCHAR" />
    <result column="address" property="address" jdbcType="VARCHAR" />
    <result column="report_time" property="reportTime" jdbcType="VARCHAR" />
    <result column="submit_check_time" property="submitCheckTime" jdbcType="VARCHAR" />
    <result column="complete_estimate_time" property="completeEstimateTime" jdbcType="VARCHAR" />
    <result column="complete_check_time" property="completeCheckTime" jdbcType="VARCHAR" />
    <result column="check_organization" property="checkOrganization" jdbcType="VARCHAR" />
    <result column="create_tm" property="createTm" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, regist_item_id, check_year, batch_no, city, serial_number, company_name, trade, 
    product_sales_amount, region, address, report_time, submit_check_time, complete_estimate_time, 
    complete_check_time, check_organization, create_tm
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.igreen.common.model.CompanyQueryCleanProductionCompanyExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from company_query_clean_production_company
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from company_query_clean_production_company
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from company_query_clean_production_company
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.igreen.common.model.CompanyQueryCleanProductionCompanyExample" >
    delete from company_query_clean_production_company
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.igreen.common.model.CompanyQueryCleanProductionCompany" useGeneratedKeys="true" keyProperty="id" >
    insert into company_query_clean_production_company (regist_item_id, check_year, batch_no, 
      city, serial_number, company_name, 
      trade, product_sales_amount, region, 
      address, report_time, submit_check_time, 
      complete_estimate_time, complete_check_time, 
      check_organization, create_tm)
    values (#{registItemId,jdbcType=INTEGER}, #{checkYear,jdbcType=VARCHAR}, #{batchNo,jdbcType=VARCHAR}, 
      #{city,jdbcType=VARCHAR}, #{serialNumber,jdbcType=VARCHAR}, #{companyName,jdbcType=VARCHAR}, 
      #{trade,jdbcType=VARCHAR}, #{productSalesAmount,jdbcType=VARCHAR}, #{region,jdbcType=VARCHAR}, 
      #{address,jdbcType=VARCHAR}, #{reportTime,jdbcType=VARCHAR}, #{submitCheckTime,jdbcType=VARCHAR}, 
      #{completeEstimateTime,jdbcType=VARCHAR}, #{completeCheckTime,jdbcType=VARCHAR}, 
      #{checkOrganization,jdbcType=VARCHAR}, #{createTm,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.igreen.common.model.CompanyQueryCleanProductionCompany" useGeneratedKeys="true" keyProperty="id" >
    insert into company_query_clean_production_company
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="registItemId != null" >
        regist_item_id,
      </if>
      <if test="checkYear != null" >
        check_year,
      </if>
      <if test="batchNo != null" >
        batch_no,
      </if>
      <if test="city != null" >
        city,
      </if>
      <if test="serialNumber != null" >
        serial_number,
      </if>
      <if test="companyName != null" >
        company_name,
      </if>
      <if test="trade != null" >
        trade,
      </if>
      <if test="productSalesAmount != null" >
        product_sales_amount,
      </if>
      <if test="region != null" >
        region,
      </if>
      <if test="address != null" >
        address,
      </if>
      <if test="reportTime != null" >
        report_time,
      </if>
      <if test="submitCheckTime != null" >
        submit_check_time,
      </if>
      <if test="completeEstimateTime != null" >
        complete_estimate_time,
      </if>
      <if test="completeCheckTime != null" >
        complete_check_time,
      </if>
      <if test="checkOrganization != null" >
        check_organization,
      </if>
      <if test="createTm != null" >
        create_tm,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="registItemId != null" >
        #{registItemId,jdbcType=INTEGER},
      </if>
      <if test="checkYear != null" >
        #{checkYear,jdbcType=VARCHAR},
      </if>
      <if test="batchNo != null" >
        #{batchNo,jdbcType=VARCHAR},
      </if>
      <if test="city != null" >
        #{city,jdbcType=VARCHAR},
      </if>
      <if test="serialNumber != null" >
        #{serialNumber,jdbcType=VARCHAR},
      </if>
      <if test="companyName != null" >
        #{companyName,jdbcType=VARCHAR},
      </if>
      <if test="trade != null" >
        #{trade,jdbcType=VARCHAR},
      </if>
      <if test="productSalesAmount != null" >
        #{productSalesAmount,jdbcType=VARCHAR},
      </if>
      <if test="region != null" >
        #{region,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="reportTime != null" >
        #{reportTime,jdbcType=VARCHAR},
      </if>
      <if test="submitCheckTime != null" >
        #{submitCheckTime,jdbcType=VARCHAR},
      </if>
      <if test="completeEstimateTime != null" >
        #{completeEstimateTime,jdbcType=VARCHAR},
      </if>
      <if test="completeCheckTime != null" >
        #{completeCheckTime,jdbcType=VARCHAR},
      </if>
      <if test="checkOrganization != null" >
        #{checkOrganization,jdbcType=VARCHAR},
      </if>
      <if test="createTm != null" >
        #{createTm,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.igreen.common.model.CompanyQueryCleanProductionCompanyExample" resultType="java.lang.Integer" >
    select count(*) from company_query_clean_production_company
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update company_query_clean_production_company
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.registItemId != null" >
        regist_item_id = #{record.registItemId,jdbcType=INTEGER},
      </if>
      <if test="record.checkYear != null" >
        check_year = #{record.checkYear,jdbcType=VARCHAR},
      </if>
      <if test="record.batchNo != null" >
        batch_no = #{record.batchNo,jdbcType=VARCHAR},
      </if>
      <if test="record.city != null" >
        city = #{record.city,jdbcType=VARCHAR},
      </if>
      <if test="record.serialNumber != null" >
        serial_number = #{record.serialNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.companyName != null" >
        company_name = #{record.companyName,jdbcType=VARCHAR},
      </if>
      <if test="record.trade != null" >
        trade = #{record.trade,jdbcType=VARCHAR},
      </if>
      <if test="record.productSalesAmount != null" >
        product_sales_amount = #{record.productSalesAmount,jdbcType=VARCHAR},
      </if>
      <if test="record.region != null" >
        region = #{record.region,jdbcType=VARCHAR},
      </if>
      <if test="record.address != null" >
        address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.reportTime != null" >
        report_time = #{record.reportTime,jdbcType=VARCHAR},
      </if>
      <if test="record.submitCheckTime != null" >
        submit_check_time = #{record.submitCheckTime,jdbcType=VARCHAR},
      </if>
      <if test="record.completeEstimateTime != null" >
        complete_estimate_time = #{record.completeEstimateTime,jdbcType=VARCHAR},
      </if>
      <if test="record.completeCheckTime != null" >
        complete_check_time = #{record.completeCheckTime,jdbcType=VARCHAR},
      </if>
      <if test="record.checkOrganization != null" >
        check_organization = #{record.checkOrganization,jdbcType=VARCHAR},
      </if>
      <if test="record.createTm != null" >
        create_tm = #{record.createTm,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update company_query_clean_production_company
    set id = #{record.id,jdbcType=INTEGER},
      regist_item_id = #{record.registItemId,jdbcType=INTEGER},
      check_year = #{record.checkYear,jdbcType=VARCHAR},
      batch_no = #{record.batchNo,jdbcType=VARCHAR},
      city = #{record.city,jdbcType=VARCHAR},
      serial_number = #{record.serialNumber,jdbcType=VARCHAR},
      company_name = #{record.companyName,jdbcType=VARCHAR},
      trade = #{record.trade,jdbcType=VARCHAR},
      product_sales_amount = #{record.productSalesAmount,jdbcType=VARCHAR},
      region = #{record.region,jdbcType=VARCHAR},
      address = #{record.address,jdbcType=VARCHAR},
      report_time = #{record.reportTime,jdbcType=VARCHAR},
      submit_check_time = #{record.submitCheckTime,jdbcType=VARCHAR},
      complete_estimate_time = #{record.completeEstimateTime,jdbcType=VARCHAR},
      complete_check_time = #{record.completeCheckTime,jdbcType=VARCHAR},
      check_organization = #{record.checkOrganization,jdbcType=VARCHAR},
      create_tm = #{record.createTm,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.igreen.common.model.CompanyQueryCleanProductionCompany" >
    update company_query_clean_production_company
    <set >
      <if test="registItemId != null" >
        regist_item_id = #{registItemId,jdbcType=INTEGER},
      </if>
      <if test="checkYear != null" >
        check_year = #{checkYear,jdbcType=VARCHAR},
      </if>
      <if test="batchNo != null" >
        batch_no = #{batchNo,jdbcType=VARCHAR},
      </if>
      <if test="city != null" >
        city = #{city,jdbcType=VARCHAR},
      </if>
      <if test="serialNumber != null" >
        serial_number = #{serialNumber,jdbcType=VARCHAR},
      </if>
      <if test="companyName != null" >
        company_name = #{companyName,jdbcType=VARCHAR},
      </if>
      <if test="trade != null" >
        trade = #{trade,jdbcType=VARCHAR},
      </if>
      <if test="productSalesAmount != null" >
        product_sales_amount = #{productSalesAmount,jdbcType=VARCHAR},
      </if>
      <if test="region != null" >
        region = #{region,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="reportTime != null" >
        report_time = #{reportTime,jdbcType=VARCHAR},
      </if>
      <if test="submitCheckTime != null" >
        submit_check_time = #{submitCheckTime,jdbcType=VARCHAR},
      </if>
      <if test="completeEstimateTime != null" >
        complete_estimate_time = #{completeEstimateTime,jdbcType=VARCHAR},
      </if>
      <if test="completeCheckTime != null" >
        complete_check_time = #{completeCheckTime,jdbcType=VARCHAR},
      </if>
      <if test="checkOrganization != null" >
        check_organization = #{checkOrganization,jdbcType=VARCHAR},
      </if>
      <if test="createTm != null" >
        create_tm = #{createTm,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.igreen.common.model.CompanyQueryCleanProductionCompany" >
    update company_query_clean_production_company
    set regist_item_id = #{registItemId,jdbcType=INTEGER},
      check_year = #{checkYear,jdbcType=VARCHAR},
      batch_no = #{batchNo,jdbcType=VARCHAR},
      city = #{city,jdbcType=VARCHAR},
      serial_number = #{serialNumber,jdbcType=VARCHAR},
      company_name = #{companyName,jdbcType=VARCHAR},
      trade = #{trade,jdbcType=VARCHAR},
      product_sales_amount = #{productSalesAmount,jdbcType=VARCHAR},
      region = #{region,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      report_time = #{reportTime,jdbcType=VARCHAR},
      submit_check_time = #{submitCheckTime,jdbcType=VARCHAR},
      complete_estimate_time = #{completeEstimateTime,jdbcType=VARCHAR},
      complete_check_time = #{completeCheckTime,jdbcType=VARCHAR},
      check_organization = #{checkOrganization,jdbcType=VARCHAR},
      create_tm = #{createTm,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>